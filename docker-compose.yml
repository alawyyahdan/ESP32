version: '3.8'

services:
  esp32-cam-server:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - ADDRESS=${ADDRESS:-http://localhost:3000}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      - ADMIN_PASS=${ADMIN_PASS:-admin123}
    volumes:
      - esp32_logs:/app/logs
      - esp32_uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - esp32_network

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - esp32-cam-server
    restart: unless-stopped
    networks:
      - esp32_network
    profiles:
      - production

volumes:
  esp32_logs:
    driver: local
  esp32_uploads:
    driver: local

networks:
  esp32_network:
    driver: bridge

